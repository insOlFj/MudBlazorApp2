@*Left Sidebar*@

<MudNavMenu Bordered="true">
	@* Menu Button *@
	<MudNavLink OnClick="@(() => DrawerToggle(toogleSideMenu))"
				 Style="background-color: white;
						color: #2B3B43;
						height: 62px;
						align-items: center;"
				Icon="@Icons.Material.Filled.Menu"
				IconColor="Color.Secondary">Menu</MudNavLink>
	@* Home Button *@
	<MudNavLink Href="" Match="NavLinkMatch.All"
				 Style="background-color: #6773AD;
						height: 62px;
						align-items: center;"
				Icon="@Icons.Material.Filled.Home">Home</MudNavLink>
	@* My Devices Button *@
	<MudNavLink Href="devices" Match="NavLinkMatch.Prefix"
				 Style="background-color: #0099A5;
						height: 62px;
						align-items: center;"
				Icon="@Icons.Material.Filled.AvTimer">Devices</MudNavLink>
	@* My Views Button *@
	<MudNavLink Href="views" Match="NavLinkMatch.Prefix"
				 Style="background-color: #67B597;
						height: 62px;
						align-items: center;"
				Icon="@Icons.Material.Filled.RemoveRedEye">Views</MudNavLink>


</MudNavMenu>

@* Dropdown menu *@

<MudPaper Width="240px" Style="align-items: center;" Elevation="0">
	<MudNavMenu>
		<MudNavGroup 
		
						
					Title=@SavedViewString
					 Style="background-color: #949E95;
							height: 62px;
							padding-top:10px;
							color: white;"
					 Icon="@Icons.Material.Filled.List"
					 @bind-Expanded=_isExpanded
					HideExpandIcon>
			<MudNavLink Href="/users"
					 Style="background-color: white;
							height: 62px;
							align-items: center;
							text-align: center;
							margin-top:10px;
							color: black;
							border-color:#2B3B43;
							border-style: solid;
							border-bottom-width: 3px;"
							>Insatech Map</MudNavLink>
			<MudNavLink Href="/security"
					 Style="background-color: white;
							height: 62px;
							align-items: center;
							text-align: right;
							color: black;
							border-color:#2B3B43;
							border-style: solid;
							border-bottom-width: 3px;"
							>Insatech Calculatede</MudNavLink>
		</MudNavGroup>
	</MudNavMenu>
</MudPaper>



@code {
	[Parameter] public bool toogleSideMenu { get; set; }
	[Parameter] public EventCallback<bool> toogleSideMenuChanged { get; set; }

	string SavedViewString = "Saved Views";

	bool _isExpanded = true;

	void DrawerToggle(bool stateOfDrawer)
	{
		toogleSideMenuChanged.InvokeAsync(toogleSideMenu);


		_isExpanded = !stateOfDrawer;

		if (stateOfDrawer == false)
		{
			SavedViewString = "Saved Views";
			
		}
		else
		{
			SavedViewString = "";
		}

	}

}

